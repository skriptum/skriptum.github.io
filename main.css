body {
  background-color: #181818;
  animation: body 1.5s linear;
  text-align: center;
}
/* Button */
.btn {
  background: none;
  border: none;
  cursor: pointer;
  line-height: 1.5;
  font: 700 1.2rem "Roboto Slab", sans-serif;
  padding: 1em 2em;
  letter-spacing: 0.05rem;
  min-height: 5vh;
  top: 70vh;
  
}

.draw-border {
  box-shadow: inset 0 0 0 5px #eeeeee;
  color: #eeeeee;
  transition: color 0.25s 0.0833333333s;
  position: relative;
}
.draw-border::before, .draw-border::after {
  border: 0 solid transparent;
  box-sizing: border-box;
  content: "";
  pointer-events: none;
  position: absolute;
  width: 0;
  height: 0;
  bottom: 0;
  right: 0;
}
.draw-border::before {
  border-bottom-width: 5px;
  border-left-width: 5px;
}
.draw-border::after {
  border-top-width: 5px;
  border-right-width: 5px;
}
.draw-border:hover {
  color: #d85035;
}
.draw-border:hover::before, .draw-border:hover::after {
  border-color: #d85035;
  transition: border-color 0s, width 0.25s, height 0.25s;
  width: 100%;
  height: 100%;
}

.draw-border:hover::before {
  transition-delay: 0s, 0s, 0.25s;
}
.draw-border:hover::after {
  transition-delay: 0s, 0.25s, 0s;
}
/*everything related to the cube */

.cube-wrap {
    top: 50%;
    left: 50%;
    --size: 15vmin;
    position: fixed;
    width: 0;
    height: 0;
    perspective: 100vmin;
  }
@media screen and (orientation:portrait) {
  .cube-wrap {
    --size: 30vmin;
  }
}

.cube {
    transform-style: preserve-3d;
    transform: rotateX(0deg) rotateZ(45deg) rotateY(45deg);
    animation: cube 10s linear infinite;
  }
  @keyframes cube {
    to {
      transform: rotateX(420deg) rotateZ(45deg) rotateY(45deg);
    }
  }
  
  .side {
    position: absolute;
    width: var(--size);
    height: var(--size);
    background-color: #c0b6b4; /* 2 */
    backface-visibility: visible;
    top: calc(var(--size) * -.5);
    left: calc(var(--size) * -.5);
  }
  .top {
    background-color: #df826d; /*1*/
    transform: rotateX(90deg) translateZ(calc(var(--size) * .5));
  }
  .bottom {
    background-color: #a03f2c; /* 7 */
    transform: rotateX(90deg) translateZ(calc(var(--size) * -.5));
  }
  .left {
    background-color: #d85035; /* 4 */
    transform: rotateY(90deg) translateZ(calc(var(--size) * .5));
  }
  .right {
    background-color: #df5e41; /* 3 */
    transform: rotateY(90deg) translateZ(calc(var(--size) * -.5));
  }
  .front {
    background-color: #b64630; /* 6 */
    transform: translateZ(calc(var(--size) * .5));
  }
  .back {
    background-color: #c9452b; /* 5 */
    transform: translateZ(calc(var(--size) * -.5));
  }
  
  :root * {
    /* Pause the animation */
    animation-play-state: running;
    /* These last 2 properites clean up overshoot weirdness */
    animation-iteration-count: 1;
    animation-fill-mode: both;
  }